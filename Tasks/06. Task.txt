Мы модный молодежный античный стартап. Наш заказчик античный полинезийский царь. Ему для его системы налогов необходим фасадный метод, который позволяет конвертировать десятеричные данные в его систему мер - ракушки.

То есть он хочет, чтобы была возможность передать число в десятеричной системе исчисления (арабское) до 100 и на выходе получить строку с точками, означающую число ракушек. Каждая ракушка равна 1 единице.
Для компактности часть строки просьба отобразить с помощью символа двоеточий : 
То есть 3 к примеру будет выглядеть как ":." , а 4 "::"

В будущем мы планируем расширять наше приложение на другие рынки, поэтому быть может в будущем понадобятся другие системы исчисления, системы мер и выводимые значения. Однако сейчас это не требуется и нужно получить деньги от царя.

Общие условия для этой и других задач:
Вы можете предложить свое решение по визуализации, обсудив его с заказчиком (интервьювером). Если оно понравится, его можно будет реализовать.

Необходим именно фасадный метод (лучше всего swagger, но можно любой аналог - кандидат должен иметь возможность показать его работоспособность любым способом). Качество кода и способ решения определяет сам исполнитель. Единственный критерий - код должен быть тестируемым (То есть приложение должно быть возможно покрыть тестами или хотя бы предложить возможные юнит тесты) и покрыт приемлемыми проверками и логами, имеет человеческие названия и читабельный.
Тоже самое касается того, как будет зваться фасадный метод и какой у него будет контракт. Однако название метод и параметров фасадного метода должно быть понятным для заказчика (он понимает английский).


Это не единственное задание на сегодня. Пожалуйста заложите на него не более 15 минут своего времени. Если что-то не успеваете, лучше реализовать корневую потребность заказчика.

--------------------

К нам пришел китайский царь. И он просит сделать такую же логику для него. Вот только вместо ракушек они используют палочки. Поэтому результат надо выводить палочками "-".
Требование для сокращения строки сохраняется Но вместо двоеточий просьба использовать =,
То есть 3 к примеру будет выглядеть как "=-" , а 4 "=="

При этом бизнес процессы других заказчиков пострадать не должны и должны работать как прежде.

--------------------
*Опционально*
К нам пришли филипинцы. До них дошли слухи про крутую систему конвертации у полинезийцев. И они просят сделать такую же логику для себя. С небольшим отличием. Меньшая часть у них всегда пишется в начале (то есть 3 у них это не ":.", а ".:"), а пятерки группируются в кучки, которые они отображают цветочком "*".
При этом бизнес процессы других заказчиков пострадать не должны и должны работать как прежде.

--------------------

К нам снова пришел китайский царь. И он просит сделать запись еще короче. Чтобы для деления на 3 отображался символ ≡. А для 4 сделать символ #.

--------------------

Полинезия просит добавить в свою систему возможность работать с дробными числами. У них может быть только дробь. Дробь они отображают запятой ",". Любая дробная часть вне зависимости от размера отображается запятой.
Просьба для краткости отобразить ; там, где целая часть числа нечетная.

Китайский царь все также использует логику целых чисел.

---------

Обработай значения от 0 до 100. Каждое 3 и 7ое значение отобрази в системе исчисления Китая. Каждое 4 и 5.5 (которое без остатка делится на них) значение в системе Полинезии. Если делиться на вводные обоих стран, отобразить сначала в системе Китая, потом в системе Полинезии. Остальные значения отображать не надо.
